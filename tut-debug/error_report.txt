/*
 * BUG#0
 * description: 
     miss semicolon
 * location: 
 *   int a = 10  (line 18)
 * evidence: 
 *   test.c:19: error: two or more data types in declaration specifiers
 */

BUG#1
description:
  miss semicolon
location:
  enum { buf_size = buf_nrec * 100}
evidence:
  gen_sort.c:54:9: error: expected ';', identifier or '(' before 'struct'



BUG#2
description:
  miss semicolon
location:
  } record_t (line 58)
evidence:
  gen_sort.c:58:11: error: expected ';' before 'static'


BUG#3
description:
  use the wrong type name
location:
  gen_rec(record *rec) (line 114)
evidence:
  gen_sort.c:114:9: error: unknown type name 'record'; did you mean 'record_t'


BUG#4
description:
  miss the header
location:
           FILE *file = fopen(fn, "r"); (line 187)
evidence:
  gen_sort.c:187:9: error: unknown type name ‘FILE’


BUG#5
description:
  miss close paren
location:
  if (!file)
evidence:
  gen_sort.c:190:17: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
  gen_sort.c:194:9: error: expected identifier or ‘(’ before ‘while’


BUG#6
description:
  use the wrong argument
location:
  for(j = 0; j < 10; i++ ) (line 125)
evidence:
  i is the argument of last for loop 


BUG#8
description:
  wrong range 
location:
  char *buf = (char *)malloc(buf_size) ; (line 185)
evidence:
  the size of buf is buf_size


BUG#8
description:
  wrong range
location:
    for (cnt = 0; (cnt <= buf_nrec) (line 147)
evidence:
  the length of buffer is buf_size,the range of rec is from  rec to rec + buf_size/100 -1 

BUG#9
description:
  the way to open file
location:
  FILE *file = fopen(fn, "r"); (line 189)
evidence:
  if the file is not exist,it will creat a new file



BUG#10
description:
  the number of rec_len is wrong
location:
  enum{ rec_len = pad_len + key_len} (line 49)
evidence:
  recno is also printed into file
